// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonitorApi.Data;

#nullable disable

namespace MonitorApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230517142204_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MonitorApi.Models.DataBase.Agrupacion", b =>
                {
                    b.Property<int>("AgrupacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgrupacionID"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("AgrupacionID");

                    b.ToTable("Agrupacions");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.JobMonitor", b =>
                {
                    b.Property<int>("JobMonitorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobMonitorID"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("JobMonitorID");

                    b.ToTable("JobMonitors");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.Monitore", b =>
                {
                    b.Property<int>("MonitoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonitoreID"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("AgrupacionID")
                        .HasColumnType("int");

                    b.Property<bool>("Alerta")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobMonitorID")
                        .HasColumnType("int");

                    b.Property<int>("Job_MonitorID")
                        .HasColumnType("int");

                    b.Property<int>("KeyMonitorProce")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Procedimiento")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("MonitoreID");

                    b.HasIndex("AgrupacionID");

                    b.HasIndex("JobMonitorID");

                    b.ToTable("Monitores");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.MonitorEstado", b =>
                {
                    b.Property<int>("MonitorEstadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonitorEstadoID"), 1L, 1);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonitorID")
                        .HasColumnType("int");

                    b.HasKey("MonitorEstadoID");

                    b.HasIndex("MonitorID")
                        .IsUnique();

                    b.ToTable("MonitorEstados");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.MonitorEstadoHist", b =>
                {
                    b.Property<int>("MonitorEstadoHistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonitorEstadoHistID"), 1L, 1);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<bool>("FalsoPositivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonitorID")
                        .HasColumnType("int");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcesoId")
                        .HasColumnType("int");

                    b.HasKey("MonitorEstadoHistID");

                    b.HasIndex("MonitorID");

                    b.ToTable("MonitorEstadoHists");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.MonitorEstadoUltimo", b =>
                {
                    b.Property<int>("MonitorEstadoUltimoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonitorEstadoUltimoID"), 1L, 1);

                    b.Property<DateTime>("FechaEstado")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonitorID")
                        .HasColumnType("int");

                    b.Property<string>("PeriodoError")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MonitorEstadoUltimoID");

                    b.HasIndex("MonitorID")
                        .IsUnique();

                    b.ToTable("MonitorEstadoUltimos");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.Monitore", b =>
                {
                    b.HasOne("MonitorApi.Models.DataBase.Agrupacion", "Agrupacion")
                        .WithMany("Monitors")
                        .HasForeignKey("AgrupacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonitorApi.Models.DataBase.JobMonitor", "JobMonitor")
                        .WithMany("Monitors")
                        .HasForeignKey("JobMonitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agrupacion");

                    b.Navigation("JobMonitor");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.MonitorEstado", b =>
                {
                    b.HasOne("MonitorApi.Models.DataBase.Monitore", "Monitor")
                        .WithOne("MonitorEstado")
                        .HasForeignKey("MonitorApi.Models.DataBase.MonitorEstado", "MonitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Monitor");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.MonitorEstadoHist", b =>
                {
                    b.HasOne("MonitorApi.Models.DataBase.Monitore", "Monitor")
                        .WithMany("MonitorEstadoHists")
                        .HasForeignKey("MonitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Monitor");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.MonitorEstadoUltimo", b =>
                {
                    b.HasOne("MonitorApi.Models.DataBase.Monitore", "Monitor")
                        .WithOne("MonitorEstadoUltimo")
                        .HasForeignKey("MonitorApi.Models.DataBase.MonitorEstadoUltimo", "MonitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Monitor");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.Agrupacion", b =>
                {
                    b.Navigation("Monitors");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.JobMonitor", b =>
                {
                    b.Navigation("Monitors");
                });

            modelBuilder.Entity("MonitorApi.Models.DataBase.Monitore", b =>
                {
                    b.Navigation("MonitorEstado")
                        .IsRequired();

                    b.Navigation("MonitorEstadoHists");

                    b.Navigation("MonitorEstadoUltimo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
